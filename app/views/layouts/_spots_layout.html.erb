<main>
  <section id="portfolio">
    <div class="container inner spot-layout-wrapper">
      <div class="row">
        <div class="col-md-8 col-sm-9 spots-header">
          <header>

            <h1><%= yield :page_header %></h1>
            <p><%= yield :page_subheader %></p>

          </header>

          <%= yield :filtering %>

          <%= yield :sorting %>
          <div class="col-xs-3 where-are-you-going">
            <%= text_field_tag(:q, nil, placeholder: "Where are you going?", id: "destination") %>
          </div>




        </div><!-- /.col -->
      </div><!-- /.row -->
    </div><!-- /.container -->
    <div id="map-container">
      <div id="map" style='width: 475px; height: 655px;'></div>
    </div>

    <div class="container inner-bottom">
      <div class="row">
        <div class="col-sm-9 portfolio">
          <ul class="filter text-center filter-type">
            <li><a href="#" data-filter="*" class="active">All</a></li>
            <li><a href="#" data-filter=".<%= Spot.types_of_spots[0] %>"><%= Spot.types_of_spots[0] %></a></li>
            <li><a href="#" data-filter=".<%= Spot.types_of_spots[1] %>"><%= Spot.types_of_spots[1] %></a></li>
            <li><a href="#" data-filter=".<%= Spot.types_of_spots[2] %>"><%= Spot.types_of_spots[2] %></a></li>
            <li><a href="#" data-filter=".<%= Spot.types_of_spots[3] %>"><%= Spot.types_of_spots[3] %></a></li>
          </ul><!-- /.filter -->
          <ul class="items col-3 gap all-spots">

            <%= yield :page_content %>

					</ul><!-- /.items -->
				</div><!-- /.col -->
			</div><!-- /.row -->
		</div><!-- /.container -->
    <% if @spots.length != 0 %>
      <div class="pagination_box">
        <% if @listings %>
          <%= will_paginate @listings, :inner_window => 2 %>
        <% else %>
          <%= will_paginate @spots, :inner_window => 2 if @spots %>
        <% end %>

      </div>
    <% end %>
	</section>
</main>

<script type="text/javascript">
  $(function() {
    createMap();
    changeMarkerToGreen();
    $('#destination').keypress(function(e) {
        if(e.which == 13) {
            codeAddress();
        }
    });
  })

  function createMap(){
    handler = Gmaps.build('Google');
    handler.buildMap({ provider: {

    }, internal: {id: 'map'}}, function(){
      markers = <%= raw @hash.to_json %>;
      storedMarkers = markers.map(function(m) {
        marker = handler.addMarker(m);
        marker.serviceObject.set('listingId', m.listingId); // You can add other attributes using set
        marker.serviceObject.set('spotId', m.spotId);
        marker.serviceObject.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png')
        return marker;
    });
      handler.bounds.extendWith(storedMarkers);
      handler.fitMapToBounds();
    });
  }

  function changeMarkerToGreen(){
    $( "li.listing-square" ).hover(
      function() {
        spotId = this.id.replace( /^\D+/g, '');
        makeMarkerGreen(spotId);
        showInfoWindow(marker);
      }, function() {
        spotId = this.id.replace( /^\D+/g, '');
        makeMarkerRed(spotId);
        closeInfoWindow(marker);
        handler.fitMapToBounds();
      }
    );
  }

  function showInfoWindow(marker){
    google.maps.event.trigger(marker.getServiceObject(), 'click');
  }

  function closeInfoWindow(marker){
    marker.infowindow.close();
  }

  function makeMarkerGreen(spotId){
    marker = _.find(storedMarkers, function(obj) { return obj.serviceObject.spotId == spotId });
    marker.serviceObject.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png');
  }

  function makeMarkerRed(){
    marker = _.find(storedMarkers, function(obj) { return obj.serviceObject.spotId == spotId });
    marker.serviceObject.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');
  }

  function addMarkerToMap(){
    latLong = <%= Geocoder.coordinates("1 union square south") %>;
    latitude = latLong[0];
    longtidue = latLong[1];
    markers = handler.addMarkers([
    {
        "lat": latitude,
        "lng": longitude,
        "picture": {
          "url": "http://maps.google.com/mapfiles/ms/icons/red-dot.png",
          "width":  36,
          "height": 36
        },
        "infowindow": "hello!"
      }
    ]);
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
    }

    function codeAddress() {
      var geocoder = new google.maps.Geocoder();
      var address = document.getElementById("destination").value;
      geocoder.geocode( { 'address': address}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          markers = handler.addMarkers([
          {
              "lat": results[0].geometry.location.lat(),
              "lng": results[0].geometry.location.lng(),
              "picture": {
                "url": "http://maps.google.com/mapfiles/ms/icons/red-dot.png",
                "width":  36,
                "height": 36
              },
              "infowindow": "hello!"
            }
          ]);
          handler.bounds.extendWith(markers);
          handler.fitMapToBounds();
          $('#q').val('');

      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
  }


</script>
